import{_ as l,t as i,v as h,x as t,J as _,K as p,y as d,L as w,M as x,N as M,B as $,z as m,O as b,P as S}from"./Cd000Fzs.js";import{l as y}from"./TjCxX7sJ.js";const D={name:"Sidebar"},B={class:"sidebar"};function L(s,e,n,c,o,r){return i(),h("div",B,e[0]||(e[0]=[t("h2",null,"ShishGram",-1),t("ul",null,[t("li",null,"Chats"),t("li",null,"Contacts"),t("li",null,"Settings")],-1)]))}const g=l(D,[["render",L],["__scopeId","data-v-ddb1b0d8"]]),N={name:"ChatList",props:{chats:Array},methods:{selectChat(s){this.$emit("chat-selected",s)}}},V={class:"chat-list"},I=["onClick"];function z(s,e,n,c,o,r){return i(),h("div",V,[e[0]||(e[0]=t("h3",null,"Chats",-1)),t("ul",null,[(i(!0),h(_,null,p(n.chats,a=>(i(),h("li",{key:a.id,onClick:u=>r.selectChat(a)},d(a.name),9,I))),128))])])}const C=l(N,[["render",z],["__scopeId","data-v-8bd923a1"]]),K={name:"ChatWindow",props:{chat:Object,socket:Object,username:String},data(){return{newMessage:""}},methods:{sendMessage(){if(!this.newMessage.trim())return;const s={id:Date.now(),sender:this.username,text:this.newMessage};this.chat.messages.push(s),this.socket.emit("chat message",{text:this.newMessage,receiver:this.chat.name,sender:this.username}),this.newMessage=""}}},O={class:"chat-window"},T={class:"messages"};function W(s,e,n,c,o,r){return i(),h("div",O,[t("h3",null,d(n.chat.name),1),t("div",T,[(i(!0),h(_,null,p(n.chat.messages,a=>(i(),h("div",{key:a.id},[t("strong",null,d(a.sender)+":",1),$(" "+d(a.text),1)]))),128))]),w(t("input",{"onUpdate:modelValue":e[0]||(e[0]=a=>o.newMessage=a),onKeyup:e[1]||(e[1]=M((...a)=>r.sendMessage&&r.sendMessage(...a),["enter"])),placeholder:"Type a message..."},null,544),[[x,o.newMessage]])])}const f=l(K,[["render",W],["__scopeId","data-v-c8b26310"]]),j={name:"Messages",components:{Sidebar:g,ChatList:C,ChatWindow:f},data(){return{socket:null,username:prompt("Введите ваше имя")||"Гость",chats:[],selectedChat:null,toast:null}},methods:{setSelectedChat(s){this.selectedChat=s},createChat(){const s=prompt("Введите имя собеседника:");s&&(this.chats.find(e=>e.name===s)||this.chats.push({id:Date.now(),name:s,messages:[]}))}},mounted(){this.socket=y("http://localhost:3000"),this.socket.on("connect",()=>{console.log("Connected ID:",this.socket.id)}),this.socket.emit("logged_in",{username:this.username}),this.socket.on("previousMessages",s=>{console.log("Received previous messages:",s)}),this.socket.on("previousMessages",s=>{s.forEach(e=>{const n=e.sender===this.username?e.receiver:e.sender;let c=this.chats.find(o=>o.name===n);c||(c={id:Date.now()+Math.random(),name:n,messages:[]},this.chats.push(c)),c.messages.push({id:e._id,sender:e.sender,text:e.text})})}),this.socket.on("chat message",s=>{const e=s.sender;let n=this.chats.find(c=>c.name===e);n||(n={id:Date.now()+Math.random(),name:e,messages:[]},this.chats.push(n)),n.messages.push({id:Date.now(),sender:s.sender,text:s.text})})}},E={class:"app"},A={class:"content"};function F(s,e,n,c,o,r){const a=g,u=C,k=f;return i(),h("div",E,[m(a),t("div",A,[e[1]||(e[1]=t("h2",null,"hello!",-1)),e[2]||(e[2]=t("h2",null,"wazzyp",-1)),t("button",{onClick:e[0]||(e[0]=(...v)=>r.createChat&&r.createChat(...v))},"Создать чат"),m(u,{chats:o.chats,onChatSelected:r.setSelectedChat},null,8,["chats","onChatSelected"]),o.selectedChat?(i(),b(k,{key:0,chat:o.selectedChat,socket:o.socket,username:o.username},null,8,["chat","socket","username"])):S("",!0)])])}const P=l(j,[["render",F]]);export{P as default};
